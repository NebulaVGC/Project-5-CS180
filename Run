import javax.swing.*;
import java.io.*;
import java.net.Socket;

/**
 * Project 04 -- Run
 * <p>
 * This class prompts user to sign in as teacher or student
 *
 * @author Tim Chou L09
 * @version April 11, 2022
 */

public class Run {
    //Initiates string prompts
    final static String WELCOMEPROMPT = "\nPlease choose a login type";
    final static String ERROR = "There was an error!";
    final static String ACCOUNTPROMPT = "How would you like to proceed?\n1. Make a new account" +
            "\n2. Login with existing account\n3. Edit existing account";
    final static String MAKEUSERNAME = "Please enter your desired username";
    final static String MAKEPASSWORD = "Please enter your desired password";
    final static String USERNAMEERROR = "Username can not contain space!";
    final static String PASSWORDERROR = "Password can not contain space!";
    final static String LOGINUSERNAME = "Please enter your username";
    final static String LOGINPASSWORD = "Please enter your password";
    final static String EDITACCOUNT = "What would you like to edit?\n1. Account name\n2. Password";
    final static String WRONGPASSWORD = "That's the wrong password!";
    final static String USERNAMEEXIST = "This username already existed!";
    final static String USERNAMEDOESNOTEXIST = "This username does not exist" + "!";

    public static Object obj = new Object();

    /*
    method that runs the quiz and takes the scanner as a parameter
     */
    public static String runQuiz(Socket socket) {

        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter writer = new PrintWriter(socket.getOutputStream());

            int welcome = 0;
            int account;
            int[] login = new int[1];

            int welcomeChoice = 0;
            while (welcome == 0) {
                welcomeChoice = showWelcomeMessageDialog();
                try {
                    if (welcomeChoice == 10) {
                    } else {
                        welcome++; //breaks out of loop
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

            if (welcomeChoice == 1) {
                while (login[0] == 0) {
                    account = 0;
                    int proceed = 0;
                    synchronized (obj) {
                        while (account == 0) {
                            proceed = accountPrompt();
                            try {
                                if (proceed != 1 && proceed != 2 && proceed != 3) {
                                    //throws error if account choice is invalid option
                                } else {
                                    account++; //breaks out of loop
                                }
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                    }

                    if (proceed == 1) {
                        synchronized (obj) {
                            writer.write("create");
                            writer.println();
                            writer.flush();
                            writer.write("teacher");
                            writer.println();
                            writer.flush();
                            return "";
                        }
                    } else if (proceed == 2) { //if user wants to login to existing account
                        synchronized (obj) {
                            writer.write("login");
                            writer.println();
                            writer.flush();
                            writer.write("teacher");
                            writer.println();
                            writer.flush();

                            String username = reader.readLine();

                            return username;
                        }
                    } else if (proceed == 3) { //if teacher wants to edit account
                        synchronized (obj) {
                            writer.write("edit");
                            writer.println();
                            writer.flush();
                            writer.write("teacher");
                            writer.println();
                            writer.flush();
                            return "";
                        }
                    }
                }
                writer.close();
                reader.close();
            } else if (welcomeChoice == 2) { //student login
                while (login[0] == 0) {

                    account = 0;
                    int proceed = 0;
                    while (account == 0) {
                        proceed = accountPrompt();
                        try {
                            if (proceed != 1 && proceed != 2 && proceed != 3) {
                                //throws error if account choice is invalid option
                            } else {
                                account++; //breaks out of loop
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    if (proceed == 1) {
                        synchronized (obj) {
                            writer.write("create");
                            writer.println();
                            writer.flush();
                            writer.write("student");
                            writer.println();
                            writer.flush();
                            return "";
                        }
                    } else if (proceed == 2) { //create account depending on whether student or teacher
                        synchronized (obj) {
                            writer.write("login");
                            writer.println();
                            writer.flush();
                            writer.write("student");
                            writer.println();
                            writer.flush();

                            String username = reader.readLine();

                            return username;
                        }
                    } else if (proceed == 3) { //if teacher wants to edit account
                        synchronized (obj) {
                            writer.write("edit");
                            writer.println();
                            writer.flush();
                            writer.write("student");
                            writer.println();
                            writer.flush();
                            return "";
                        }
                    }
                }
            }


        } catch (
                Exception e) {
            e.printStackTrace();
        }

        return null;
    }

    /*
    method that checks the teacher and student account/passwords
     */


    public static int showWelcomeMessageDialog() {

        String[] options = {"Teacher", "Student"};
        int result = 1;
        do {
            result = JOptionPane.showOptionDialog(null, "Welcome!" + WELCOMEPROMPT, "User Type",
                    JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE,
                    null, options, null);
            if (result == JOptionPane.CLOSED_OPTION) {
                return 10;
            } else if (result == JOptionPane.YES_OPTION) {
                return 1;
            } else if (result == JOptionPane.NO_OPTION) {
                return 2;
            }
        } while (result != 0);

        return result;

    }

    public static int accountPrompt() {

        String[] options = {"1. Make a new account", "2. Login with existing account", "3. Edit existing account"};
        String result = "";
        do {
            result = (String) JOptionPane.showInputDialog(null, "How would you like to proceed?", "Action selection",
                    JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (result == null) {
                return 4;
            }
            if (result.equals("1. Make a new account")) {
                return 1;
            } else if (result.equals("2. Login with existing account")) {
                return 2;
            } else if (result.equals("3. Edit existing account")) {
                return 3;
            } else {
                return 4;
            }
        } while (result.equals("true"));
    }
}
